{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/Desktop/\\u110B\\u1173\\u11AB\\u110C\\u1175/Test2/test2/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const is_login = useSelector(state => state.user.is_login);\n  const {\n    history\n  } = props;\n  const [url, setUrl] = React.useState(\"\");\n\n  const summit = () => {\n    if (url === \"\") {\n      window.alert(\"링크를 첨부해 주세요!\");\n      return;\n    }\n\n    window.alert(\"저장 성공!\");\n    console.log(url);\n  };\n\n  if (!is_login) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      margin: \"100px 0px\",\n      padding: \"16px\",\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: true,\n        children: \"\\uC557! \\uC7A0\\uAE50!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        is_center: true,\n        _onClick: () => {\n          history.replace(\"/login\");\n        },\n        children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        margin: \"0px\",\n        size: \"36px\",\n        bold: true,\n        children: \"\\uC790\\uB8CC \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        label: \"\\uB9C1\\uD06C \\uCCA8\\uBD80\",\n        placeholder: \"url\\uC744 \\uCCA8\\uBD80\\uD574 \\uC8FC\\uC138\\uC694\",\n        _onChange: e => {\n          setUrl(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      center: true,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        is_center: true,\n        text: \"\\uC5C5\\uB85C\\uB4DC \\uD558\\uAE30\",\n        _onClick: () => {\n          console.log(\"업로드 했어!\");\n          summit();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PostWrite, \"ZE704j3BcXE3UQpUTGlKNG3aQnk=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostWrite;\nexport default PostWrite; // import { useRef, useState } from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// const PostWrite = ({ onCreate }) => {\n//   const authorInput = useRef();\n//   const summaryInput = useRef();\n//   const [state, setState] = useState({\n//     author: \"\",\n//     summary: \"\"\n//   });\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n//   const handleSubmit = () => {\n//     if (state.author.length < 1) {\n//       authorInput.current.focus();\n//       return;\n//     }\n//     if (state.summary.length < 5) {\n//       summaryInput.current.focus();\n//       return;\n//     }\n//     onCreate(state.author, state.summary);\n//     alert(\"저장 성공\");\n//     setState({\n//       author: \"\",\n//       summary: \"\"\n//     });\n//   };\n//   return (\n//     // <div className=\"DiaryEditor\">\n//     //   <h2>자료 저장하기</h2>\n//     //   <div>\n//     //     <input\n//     //       ref={authorInput}\n//     //       value={state.author}\n//     //       onChange={handleChangeState}\n//     //       name=\"author\"\n//     //       placeholder=\"작성자\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <input\n//     //       ref={summaryInput}\n//     //       value={state.summary}\n//     //       onChange={handleChangeState}\n//     //       name=\"summary\"\n//     //       placeholder=\"url\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <button onClick={handleSubmit}>자료 저장하기</button>\n//     //   </div>\n//     // </div>\n//     <Grid padding=\"16px\">\n//       <h2>자료 저장하기</h2>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={authorInput}\n//           value={state.author}\n//           onChange={handleChangeState}\n//           name=\"author\"\n//           placeholder=\"작성자\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={summaryInput}\n//           value={state.summary}\n//           onChange={handleChangeState}\n//           name=\"summary\"\n//           placeholder=\"url\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <button onClick={handleSubmit}>자료 저장하기</button>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n// export default PostWrite;\n// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// import { useRef, useState } from \"react\";\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   // const [url, setUrl] = React.useState(\"\");\n//   const contentInput = useRef();\n//   const [state, setState] = useState({\n//     content: \"\"\n//   });\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n// const summit = () => {\n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n//   window.alert(\"저장 성공!\");\n//   console.log(state);\n// };\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n//         <Grid padding=\"16px\">\n//           <Input\n//             ref={contentInput}\n//             value={state.content}\n//             onChange={handleChangeState}\n//             name=\"content\"\n//             placeholder=\"링크\"\n//             type=\"text\"\n//           />\n//         </Grid>\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n// export default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"sources":["/Users/eunji/Desktop/은지/Test2/test2/src/pages/PostWrite.js"],"names":["React","Grid","Text","Button","Image","Input","Upload","useSelector","useDispatch","PostWrite","props","is_login","state","user","history","url","setUrl","useState","summit","window","alert","console","log","replace","e","target","value"],"mappings":"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":["import React from \"react\";\nimport {Grid, Text, Button, Image, Input} from \"../elements\";\nimport Upload from \"../shared/Upload\";\n\nimport {useSelector, useDispatch} from \"react-redux\";\n\nconst PostWrite = (props) => {\n  const is_login = useSelector((state) => state.user.is_login);\n  const {history} = props;\n  const [url, setUrl] = React.useState(\"\");\n\nconst summit = () => {\n    \n  if(url === \"\"){\n    window.alert(\"링크를 첨부해 주세요!\");\n    return;\n  }\n\n  window.alert(\"저장 성공!\");\n  console.log(url);\n};\n\n  if(!is_login){\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗! 잠깐!\n        </Text>\n        <Text size=\"16px\">\n          로그인 후에만 글을 쓸 수 있어요!\n        </Text>\n        <Button is_center\n          _onClick={() => {\n            history.replace(\"/login\");\n          }}\n        >\n          로그인 하러가기\n        </Button>\n      </Grid>\n    );\n  }\n\n    return (\n      <React.Fragment>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"36px\" bold>\n            자료 추가하기\n          </Text>\n          <Upload/>\n        </Grid>\n\n        <Grid padding=\"16px\">\n          <Input\n            label=\"링크 첨부\" placeholder=\"url을 첨부해 주세요\"\n            _onChange={(e) => {\n              setUrl(e.target.value);\n            }}\n          />\n        </Grid>\n\n        <Grid padding=\"16px\" center>\n          <Button is_center text=\"업로드 하기\"\n          _onClick={() => {\n            console.log(\"업로드 했어!\");\n            summit();\n          }}\n        ></Button>\n        </Grid>\n      </React.Fragment>\n    );\n}\n\nexport default PostWrite;\n\n\n\n\n\n\n\n\n// import { useRef, useState } from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n\n// const PostWrite = ({ onCreate }) => {\n//   const authorInput = useRef();\n//   const summaryInput = useRef();\n\n//   const [state, setState] = useState({\n//     author: \"\",\n//     summary: \"\"\n//   });\n\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     if (state.author.length < 1) {\n//       authorInput.current.focus();\n//       return;\n//     }\n\n//     if (state.summary.length < 5) {\n//       summaryInput.current.focus();\n//       return;\n//     }\n\n//     onCreate(state.author, state.summary);\n//     alert(\"저장 성공\");\n//     setState({\n//       author: \"\",\n//       summary: \"\"\n//     });\n//   };\n\n//   return (\n//     // <div className=\"DiaryEditor\">\n//     //   <h2>자료 저장하기</h2>\n//     //   <div>\n//     //     <input\n//     //       ref={authorInput}\n//     //       value={state.author}\n//     //       onChange={handleChangeState}\n//     //       name=\"author\"\n//     //       placeholder=\"작성자\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <input\n//     //       ref={summaryInput}\n//     //       value={state.summary}\n//     //       onChange={handleChangeState}\n//     //       name=\"summary\"\n//     //       placeholder=\"url\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n      \n//     //   <div>\n//     //     <button onClick={handleSubmit}>자료 저장하기</button>\n//     //   </div>\n//     // </div>\n\n//     <Grid padding=\"16px\">\n//       <h2>자료 저장하기</h2>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={authorInput}\n//           value={state.author}\n//           onChange={handleChangeState}\n//           name=\"author\"\n//           placeholder=\"작성자\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={summaryInput}\n//           value={state.summary}\n//           onChange={handleChangeState}\n//           name=\"summary\"\n//           placeholder=\"url\"\n//           type=\"text\"\n//         />\n//       </Grid>\n      \n//       <Grid padding=\"16px\">\n//         <button onClick={handleSubmit}>자료 저장하기</button>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n// export default PostWrite;\n\n\n\n\n\n\n\n\n\n\n// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n\n// import {useSelector, useDispatch} from \"react-redux\";\n// import { useRef, useState } from \"react\";\n\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   // const [url, setUrl] = React.useState(\"\");\n//   const contentInput = useRef();\n\n//   const [state, setState] = useState({\n//     content: \"\"\n//   });\n\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n\n// const summit = () => {\n    \n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n\n//   window.alert(\"저장 성공!\");\n//   console.log(state);\n// };\n\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n\n//         <Grid padding=\"16px\">\n//           <Input\n//             ref={contentInput}\n//             value={state.content}\n//             onChange={handleChangeState}\n//             name=\"content\"\n//             placeholder=\"링크\"\n//             type=\"text\"\n//           />\n//         </Grid>\n\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n\n// export default PostWrite;\n"]},"metadata":{},"sourceType":"module"}