{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/Desktop/\\u110B\\u1173\\u11AB\\u110C\\u1175/Test2/test2/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   const [url, setUrl] = React.useState(\"\");\n// const summit = () => {\n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n//   window.alert(\"저장 성공!\");\n// };\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n//         <Grid padding=\"16px\">\n//           <Input\n//             label=\"링크 첨부\" placeholder=\"url을 첨부해 주세요\"\n//             _onChange={(e) => {\n//               setUrl(e.target.value);\n//             }}\n//           />\n//         </Grid>\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n// export default PostWrite;\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = _ref => {\n  _s();\n\n  let {\n    onCreate\n  } = _ref;\n  const authorInput = useRef();\n  const contentInput = useRef();\n  const [state, setState] = useState({\n    author: \"\",\n    content: \"\"\n  });\n\n  const handleChangeState = e => {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (state.author.length < 1) {\n      authorInput.current.focus();\n      return;\n    }\n\n    if (state.content.length < 5) {\n      contentInput.current.focus();\n      return;\n    }\n\n    onCreate(state.author, state.content);\n    alert(\"저장 성공\");\n    setState({\n      author: \"\",\n      content: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DiaryEditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC790\\uB8CC \\uC800\\uC7A5\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: authorInput,\n        value: state.author,\n        onChange: handleChangeState,\n        name: \"author\",\n        placeholder: \"\\uC791\\uC131\\uC790\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: contentInput,\n        value: state.content,\n        onChange: handleChangeState,\n        name: \"content\",\n        placeholder: \"url\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"\\uC790\\uB8CC \\uC800\\uC7A5\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostWrite, \"686rz44mR8WFJvl7BC2SHGtTZFA=\");\n\n_c = PostWrite;\nexport default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"names":["useRef","useState","PostWrite","onCreate","authorInput","contentInput","state","setState","author","content","handleChangeState","e","target","name","value","handleSubmit","length","current","focus","alert"],"sources":["/Users/eunji/Desktop/은지/Test2/test2/src/pages/PostWrite.js"],"sourcesContent":["// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n\n// import {useSelector, useDispatch} from \"react-redux\";\n\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   const [url, setUrl] = React.useState(\"\");\n\n// const summit = () => {\n    \n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n\n//   window.alert(\"저장 성공!\");\n\n// };\n\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n\n//         <Grid padding=\"16px\">\n//           <Input\n//             label=\"링크 첨부\" placeholder=\"url을 첨부해 주세요\"\n//             _onChange={(e) => {\n//               setUrl(e.target.value);\n//             }}\n//           />\n//         </Grid>\n\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n\n// export default PostWrite;\n\n\nimport { useRef, useState } from \"react\";\n\nconst PostWrite = ({ onCreate }) => {\n  const authorInput = useRef();\n  const contentInput = useRef();\n\n  const [state, setState] = useState({\n    author: \"\",\n    content: \"\"\n  });\n\n  const handleChangeState = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = () => {\n    if (state.author.length < 1) {\n      authorInput.current.focus();\n      return;\n    }\n\n    if (state.content.length < 5) {\n      contentInput.current.focus();\n      return;\n    }\n\n    onCreate(state.author, state.content);\n    alert(\"저장 성공\");\n    setState({\n      author: \"\",\n      content: \"\"\n    });\n  };\n\n  return (\n    <div className=\"DiaryEditor\">\n      <h2>자료 저장하기</h2>\n      <div>\n        <input\n          ref={authorInput}\n          value={state.author}\n          onChange={handleChangeState}\n          name=\"author\"\n          placeholder=\"작성자\"\n          type=\"text\"\n        />\n      </div>\n      <div>\n        <input\n          ref={contentInput}\n          value={state.content}\n          onChange={handleChangeState}\n          name=\"content\"\n          placeholder=\"url\"\n          type=\"text\"\n        />\n      </div>\n      \n      <div>\n        <button onClick={handleSubmit}>자료 저장하기</button>\n      </div>\n    </div>\n  );\n};\nexport default PostWrite;\n"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,SAAS,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAClC,MAAMC,WAAW,GAAGJ,MAAM,EAA1B;EACA,MAAMK,YAAY,GAAGL,MAAM,EAA3B;EAEA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;IACjCO,MAAM,EAAE,EADyB;IAEjCC,OAAO,EAAE;EAFwB,CAAD,CAAlC;;EAKA,MAAMC,iBAAiB,GAAIC,CAAD,IAAO;IAC/BJ,QAAQ,CAAC,EACP,GAAGD,KADI;MAEP,CAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;IAFnB,CAAD,CAAR;EAID,CALD;;EAOA,MAAMC,YAAY,GAAG,MAAM;IACzB,IAAIT,KAAK,CAACE,MAAN,CAAaQ,MAAb,GAAsB,CAA1B,EAA6B;MAC3BZ,WAAW,CAACa,OAAZ,CAAoBC,KAApB;MACA;IACD;;IAED,IAAIZ,KAAK,CAACG,OAAN,CAAcO,MAAd,GAAuB,CAA3B,EAA8B;MAC5BX,YAAY,CAACY,OAAb,CAAqBC,KAArB;MACA;IACD;;IAEDf,QAAQ,CAACG,KAAK,CAACE,MAAP,EAAeF,KAAK,CAACG,OAArB,CAAR;IACAU,KAAK,CAAC,OAAD,CAAL;IACAZ,QAAQ,CAAC;MACPC,MAAM,EAAE,EADD;MAEPC,OAAO,EAAE;IAFF,CAAD,CAAR;EAID,CAjBD;;EAmBA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,uBACE;QACE,GAAG,EAAEL,WADP;QAEE,KAAK,EAAEE,KAAK,CAACE,MAFf;QAGE,QAAQ,EAAEE,iBAHZ;QAIE,IAAI,EAAC,QAJP;QAKE,WAAW,EAAC,oBALd;QAME,IAAI,EAAC;MANP;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF,eAYE;MAAA,uBACE;QACE,GAAG,EAAEL,YADP;QAEE,KAAK,EAAEC,KAAK,CAACG,OAFf;QAGE,QAAQ,EAAEC,iBAHZ;QAIE,IAAI,EAAC,SAJP;QAKE,WAAW,EAAC,KALd;QAME,IAAI,EAAC;MANP;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF,eAuBE;MAAA,uBACE;QAAQ,OAAO,EAAEK,YAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAvBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAhED;;GAAMb,S;;KAAAA,S;AAiEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}