{"ast":null,"code":"var _jsxFileName = \"/Users/eunji/Desktop/\\u110B\\u1173\\u11AB\\u110C\\u1175/Test2/test2/src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\n// import React from \"react\"\n// import { Text, Input, Grid, Button } from \"../elements\";\n// import Upload from \"../shared/Upload\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// import {actionCreators as postActions} from \"../redux/modules/post\";\n// import { history } from \"../redux/configureStore\";\n// import Post from \"../components/Post\";\n// import SideBar from \"../shared/SideBar\";\n// import Table from \"../shared/Table\";\n// import List from \"../shared/List\";\n// const PostList = (pros) => {\n//     const [contents, setContents] = React.useState('');\n//     const dispatch = useDispatch();\n//     const changeContents = (e) => {\n//         setContents(e.target.value);\n//     }\n//     React.useEffect(() => {\n//         dispatch(postActions.getPostFB());\n//     }, []);\n//     return (\n//         <React.Fragment>\n//             <Grid padding=\"16px\">\n//                 <Grid>\n//                     <SideBar/>\n//                 </Grid>\n//                 <Grid center>\n//                     <Table/>\n//                 </Grid>\n//                 {/* <Grid center>\n//                     <List/>\n//                 </Grid> */}\n//             </Grid>\n//             <Button is_float text=\"+\" _onClick={() => {history.push('/write');}}></Button>\n//         </React.Fragment>\n//     )\n// }\n// export default PostList;\nimport React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\nimport Post from \"../components/Post\";\nimport SideBar from \"../shared/SideBar\";\nimport Table from \"../shared/Table\";\nimport List from \"../shared/List\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = pros => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const dataId = useRef(0);\n  const [contents, setContents] = React.useState('');\n  const dispatch = useDispatch();\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  };\n\n  React.useEffect(() => {\n    dispatch(postActions.getPostFB());\n  }, []);\n\n  const onCreate = (author, content, emotion) => {\n    const created_date = new Date().getTime();\n    const newItem = {\n      content,\n      created_date,\n      id: dataId.current\n    };\n    dataId.current += 1;\n    setData([newItem, ...data]);\n  };\n\n  const onRemove = targetId => {\n    const newList = data.filter(it => it.id !== targetId);\n    setData(newList);\n  };\n\n  const onEdit = (targetId, newContent) => {\n    setData(data.map(it => it.id === targetId ? { ...it,\n      content: newContent\n    } : it));\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        center: true,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          onEdit: onEdit,\n          onRemove: onRemove,\n          List: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      is_float: true,\n      text: \"+\",\n      _onClick: () => {\n        history.push('/write');\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostList, \"/+MrTwCV7RwwQRrK5X7y+A7iadI=\", false, function () {\n  return [useDispatch];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/eunji/Desktop/은지/Test2/test2/src/pages/PostList.js"],"names":["React","Text","Input","Grid","Button","Upload","useSelector","useDispatch","actionCreators","postActions","history","Post","SideBar","Table","List","useRef","useState","PostList","pros","data","setData","dataId","contents","setContents","dispatch","changeContents","e","target","value","useEffect","getPostFB","onCreate","author","content","emotion","created_date","Date","getTime","newItem","id","current","onRemove","targetId","newList","filter","it","onEdit","newContent","map","push"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,MAA5B,QAA0C,aAA1C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAc,IAAIC,WAA1B,QAA4C,uBAA5C;AACA,SAASC,OAAT,QAAwB,yBAAxB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;AAEA,MAAMC,QAAQ,GAAIC,IAAD,IAAU;AAAA;;AACvB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMK,MAAM,GAAGN,MAAM,CAAC,CAAD,CAArB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BvB,KAAK,CAACgB,QAAN,CAAe,EAAf,CAAhC;AAEA,QAAMQ,QAAQ,GAAGjB,WAAW,EAA5B;;AACA,QAAMkB,cAAc,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,WAAW,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFD;;AAIA5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,MAAM;AAClBL,IAAAA,QAAQ,CAACf,WAAW,CAACqB,SAAZ,EAAD,CAAR;AAEH,GAHD,EAGG,EAHH;;AAKA,QAAMC,QAAQ,GAAG,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,KAA8B;AAC3C,UAAMC,YAAY,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAArB;AACA,UAAMC,OAAO,GAAG;AACdL,MAAAA,OADc;AAEdE,MAAAA,YAFc;AAGdI,MAAAA,EAAE,EAAElB,MAAM,CAACmB;AAHG,KAAhB;AAKAnB,IAAAA,MAAM,CAACmB,OAAP,IAAkB,CAAlB;AACApB,IAAAA,OAAO,CAAC,CAACkB,OAAD,EAAU,GAAGnB,IAAb,CAAD,CAAP;AACD,GATH;;AAWA,QAAMsB,QAAQ,GAAIC,QAAD,IAAc;AAC3B,UAAMC,OAAO,GAAGxB,IAAI,CAACyB,MAAL,CAAaC,EAAD,IAAQA,EAAE,CAACN,EAAH,KAAUG,QAA9B,CAAhB;AACAtB,IAAAA,OAAO,CAACuB,OAAD,CAAP;AACD,GAHH;;AAKE,QAAMG,MAAM,GAAG,CAACJ,QAAD,EAAWK,UAAX,KAA0B;AACvC3B,IAAAA,OAAO,CACLD,IAAI,CAAC6B,GAAL,CAAUH,EAAD,IACPA,EAAE,CAACN,EAAH,KAAUG,QAAV,GAAqB,EAAE,GAAGG,EAAL;AAASZ,MAAAA,OAAO,EAAEc;AAAlB,KAArB,GAAsDF,EADxD,CADK,CAAP;AAKD,GAND;;AAQF,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,OAAO,EAAC,MAAd;AAAA,8BACI,QAAC,IAAD;AAAA,+BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,MAAM,MAAZ;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEC,MAAf;AAAuB,UAAA,QAAQ,EAAEL,QAAjC;AAA2C,UAAA,IAAI,EAAEtB;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAYI,QAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,GAAtB;AAA0B,MAAA,QAAQ,EAAE,MAAM;AAACT,QAAAA,OAAO,CAACuC,IAAR,CAAa,QAAb;AAAwB;AAAnE;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAvDD;;GAAMhC,Q;UAKeV,W;;;KALfU,Q;AAyDN,eAAeA,QAAf","sourcesContent":["// import React from \"react\"\n// import { Text, Input, Grid, Button } from \"../elements\";\n// import Upload from \"../shared/Upload\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// import {actionCreators as postActions} from \"../redux/modules/post\";\n// import { history } from \"../redux/configureStore\";\n\n// import Post from \"../components/Post\";\n// import SideBar from \"../shared/SideBar\";\n// import Table from \"../shared/Table\";\n// import List from \"../shared/List\";\n\n// const PostList = (pros) => {\n\n//     const [contents, setContents] = React.useState('');\n\n//     const dispatch = useDispatch();\n//     const changeContents = (e) => {\n//         setContents(e.target.value);\n//     }\n\n//     React.useEffect(() => {\n//         dispatch(postActions.getPostFB());\n\n//     }, []);\n\n//     return (\n//         <React.Fragment>\n//             <Grid padding=\"16px\">\n//                 <Grid>\n//                     <SideBar/>\n//                 </Grid>\n//                 <Grid center>\n//                     <Table/>\n//                 </Grid>\n//                 {/* <Grid center>\n//                     <List/>\n//                 </Grid> */}\n//             </Grid>\n//             <Button is_float text=\"+\" _onClick={() => {history.push('/write');}}></Button>\n//         </React.Fragment>\n//     )\n// }\n\n// export default PostList;\n\n\n\nimport React from \"react\"\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport { history } from \"../redux/configureStore\";\n\nimport Post from \"../components/Post\";\nimport SideBar from \"../shared/SideBar\";\nimport Table from \"../shared/Table\";\nimport List from \"../shared/List\";\nimport { useRef, useState } from \"react\";\n\nconst PostList = (pros) => {\n    const [data, setData] = useState([]);\n    const dataId = useRef(0);\n    const [contents, setContents] = React.useState('');\n\n    const dispatch = useDispatch();\n    const changeContents = (e) => {\n        setContents(e.target.value);\n    }\n\n    React.useEffect(() => {\n        dispatch(postActions.getPostFB());\n\n    }, []);\n\n    const onCreate = (author, content, emotion) => {\n        const created_date = new Date().getTime();\n        const newItem = {\n          content,\n          created_date,\n          id: dataId.current\n        };\n        dataId.current += 1;\n        setData([newItem, ...data]);\n      };\n\n    const onRemove = (targetId) => {\n        const newList = data.filter((it) => it.id !== targetId);\n        setData(newList);\n      };\n    \n      const onEdit = (targetId, newContent) => {\n        setData(\n          data.map((it) =>\n            it.id === targetId ? { ...it, content: newContent } : it\n          )\n        );\n      };\n\n    return (\n        <React.Fragment>\n            <Grid padding=\"16px\">\n                <Grid>\n                    <SideBar/>\n                </Grid>\n                <Grid center>\n                    <Table onEdit={onEdit} onRemove={onRemove} List={data}/>\n                </Grid>\n                {/* <Grid center>\n                    <List/>\n                </Grid> */}\n            </Grid>\n            <Button is_float text=\"+\" _onClick={() => {history.push('/write');}}></Button>\n        </React.Fragment>\n    )\n}\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}