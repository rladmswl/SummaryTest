{"ast":null,"code":"// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n// import {useSelector, useDispatch} from \"react-redux\";\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   const [url, setUrl] = React.useState(\"\");\n// const summit = () => {\n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n//   window.alert(\"저장 성공!\");\n// };\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n//         <Grid padding=\"16px\">\n//           <Input\n//             label=\"링크 첨부\" placeholder=\"url을 첨부해 주세요\"\n//             _onChange={(e) => {\n//               setUrl(e.target.value);\n//             }}\n//           />\n//         </Grid>\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n// export default PostWrite;\n// import { useRef, useState } from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// const PostWrite = ({ onCreate }) => {\n//   const authorInput = useRef();\n//   const summaryInput = useRef();\n//   const [state, setState] = useState({\n//     author: \"\",\n//     summary: \"\"\n//   });\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n//   const handleSubmit = () => {\n//     if (state.author.length < 1) {\n//       authorInput.current.focus();\n//       return;\n//     }\n//     if (state.summary.length < 5) {\n//       summaryInput.current.focus();\n//       return;\n//     }\n//     onCreate(state.author, state.summary);\n//     alert(\"저장 성공\");\n//     setState({\n//       author: \"\",\n//       summary: \"\"\n//     });\n//   };\n//   return (\n//     // <div className=\"DiaryEditor\">\n//     //   <h2>자료 저장하기</h2>\n//     //   <div>\n//     //     <input\n//     //       ref={authorInput}\n//     //       value={state.author}\n//     //       onChange={handleChangeState}\n//     //       name=\"author\"\n//     //       placeholder=\"작성자\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <input\n//     //       ref={summaryInput}\n//     //       value={state.summary}\n//     //       onChange={handleChangeState}\n//     //       name=\"summary\"\n//     //       placeholder=\"url\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <button onClick={handleSubmit}>자료 저장하기</button>\n//     //   </div>\n//     // </div>\n//     <Grid padding=\"16px\">\n//       <h2>자료 저장하기</h2>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={authorInput}\n//           value={state.author}\n//           onChange={handleChangeState}\n//           name=\"author\"\n//           placeholder=\"작성자\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={summaryInput}\n//           value={state.summary}\n//           onChange={handleChangeState}\n//           name=\"summary\"\n//           placeholder=\"url\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <button onClick={handleSubmit}>자료 저장하기</button>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n// export default PostWrite;","map":{"version":3,"names":[],"sources":["/Users/eunji/Desktop/은지/Test2/test2/src/pages/PostWrite.js"],"sourcesContent":["// import React from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n// import Upload from \"../shared/Upload\";\n\n// import {useSelector, useDispatch} from \"react-redux\";\n\n// const PostWrite = (props) => {\n//   const is_login = useSelector((state) => state.user.is_login);\n//   const {history} = props;\n//   const [url, setUrl] = React.useState(\"\");\n\n// const summit = () => {\n    \n//   if(url === \"\"){\n//     window.alert(\"링크를 첨부해 주세요!\");\n//     return;\n//   }\n\n//   window.alert(\"저장 성공!\");\n\n// };\n\n//   if(!is_login){\n//     return (\n//       <Grid margin=\"100px 0px\" padding=\"16px\" center>\n//         <Text size=\"32px\" bold>\n//           앗! 잠깐!\n//         </Text>\n//         <Text size=\"16px\">\n//           로그인 후에만 글을 쓸 수 있어요!\n//         </Text>\n//         <Button\n//           _onClick={() => {\n//             history.replace(\"/login\");\n//           }}\n//         >\n//           로그인 하러가기\n//         </Button>\n//       </Grid>\n//     );\n//   }\n\n//     return (\n//       <React.Fragment>\n//         <Grid padding=\"16px\">\n//           <Text margin=\"0px\" size=\"36px\" bold>\n//             자료 추가하기\n//           </Text>\n//           <Upload/>\n//         </Grid>\n\n//         <Grid padding=\"16px\">\n//           <Input\n//             label=\"링크 첨부\" placeholder=\"url을 첨부해 주세요\"\n//             _onChange={(e) => {\n//               setUrl(e.target.value);\n//             }}\n//           />\n//         </Grid>\n\n//         <Grid padding=\"16px\" center>\n//           <Button is_center text=\"업로드 하기\"\n//           _onClick={() => {\n//             console.log(\"업로드 했어!\");\n//             summit();\n//           }}\n//         ></Button>\n//         </Grid>\n//       </React.Fragment>\n//     );\n// }\n\n// export default PostWrite;\n\n\n\n\n\n\n\n\n// import { useRef, useState } from \"react\";\n// import {Grid, Text, Button, Image, Input} from \"../elements\";\n\n// const PostWrite = ({ onCreate }) => {\n//   const authorInput = useRef();\n//   const summaryInput = useRef();\n\n//   const [state, setState] = useState({\n//     author: \"\",\n//     summary: \"\"\n//   });\n\n//   const handleChangeState = (e) => {\n//     setState({\n//       ...state,\n//       [e.target.name]: e.target.value\n//     });\n//   };\n\n//   const handleSubmit = () => {\n//     if (state.author.length < 1) {\n//       authorInput.current.focus();\n//       return;\n//     }\n\n//     if (state.summary.length < 5) {\n//       summaryInput.current.focus();\n//       return;\n//     }\n\n//     onCreate(state.author, state.summary);\n//     alert(\"저장 성공\");\n//     setState({\n//       author: \"\",\n//       summary: \"\"\n//     });\n//   };\n\n//   return (\n//     // <div className=\"DiaryEditor\">\n//     //   <h2>자료 저장하기</h2>\n//     //   <div>\n//     //     <input\n//     //       ref={authorInput}\n//     //       value={state.author}\n//     //       onChange={handleChangeState}\n//     //       name=\"author\"\n//     //       placeholder=\"작성자\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n//     //   <div>\n//     //     <input\n//     //       ref={summaryInput}\n//     //       value={state.summary}\n//     //       onChange={handleChangeState}\n//     //       name=\"summary\"\n//     //       placeholder=\"url\"\n//     //       type=\"text\"\n//     //     />\n//     //   </div>\n      \n//     //   <div>\n//     //     <button onClick={handleSubmit}>자료 저장하기</button>\n//     //   </div>\n//     // </div>\n\n//     <Grid padding=\"16px\">\n//       <h2>자료 저장하기</h2>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={authorInput}\n//           value={state.author}\n//           onChange={handleChangeState}\n//           name=\"author\"\n//           placeholder=\"작성자\"\n//           type=\"text\"\n//         />\n//       </Grid>\n//       <Grid padding=\"16px\">\n//         <input\n//           ref={summaryInput}\n//           value={state.summary}\n//           onChange={handleChangeState}\n//           name=\"summary\"\n//           placeholder=\"url\"\n//           type=\"text\"\n//         />\n//       </Grid>\n      \n//       <Grid padding=\"16px\">\n//         <button onClick={handleSubmit}>자료 저장하기</button>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n// export default PostWrite;\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings},"metadata":{},"sourceType":"module"}